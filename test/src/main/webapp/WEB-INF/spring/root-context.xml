<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- pom.xml의 dependency구문에 의해 다운받은 라이브러리에 존재하는 클래스들을 이용하여 bean(객체)를 생성한 의미 -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<!--
		서버에 올릴 때 : 
		<property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:xe"></property>
		로그로 에러메시지 확인할 때
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" />
		<property name="jdbcUrl" value="jdbc:log4jdbc:oracle:thin:@localhost:1521:xe" />
		  --> 
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" />
		<property name="jdbcUrl" value="jdbc:log4jdbc:oracle:thin:@localhost:1521:xe" />
		<property name="username" value="ora_user" />
		<property name="password" value="1234" />
	</bean>
	
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg ref="hikariConfig" /> 
	</bean>
	
	<!-- 데이터베이스 연결(노출된 형태의 작업만, background는 hikariConfig와 dataSource가  데이터 베이스 연결(ref = "dataSource")함 )과 SQL구문 실행에 대한 모든 기능을 가진 객체 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- com.demo.mapper 패키지에 존재하는 Interface를 Mapper Interface로 만들어 주는 설정 구문  -->
	<mybatis-spring:scan base-package="com.docmall.mapper"/>
	
	<!-- 추가 -->
	<context:component-scan base-package="com.docmall.service" />
</beans>
